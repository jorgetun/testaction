

[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE]

AdminInterface=
CCFLoader=CCFLoader
ClassName=com.hp.siu.adminagent.procmgr.SessionServerProcess
QueryInterface=
RepositoryLoader=Repository
SNMESchemaLoader=snmeloader


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/CCFLoader]

ClassName=com.hp.usage.ccf.framework.CCFLoader


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/Connectors]

ClassName=com.hp.siu.serverutils.ConnectorManager
ConnectorNames=CORBAServer
ConnectorNames=RatingServer


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/Connectors/CORBAServer]

ClassName=com.hp.siu.sessionserver.CorbaConnector


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/Connectors/RatingServer]

BulkReadBufferSize=80000
ClassName=com.hp.usage.nme.rpc.server.NMERPCServerAdapter
DecodeAttributes=SAML20_CORP:RequestRuleEngine,requestRuleEngine
EncodeAttribute=responseRuleEngine
InactivityTimeout=3600
Managed=true
MaxConnections=${CONNECTORS_RATINGSERVER_MAXCONNECTIONS}
MaxPacketSize=80000
RootNMEType=SAML20_CORP:Body


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/Connectors/RatingServer/Transport]

ClassName=com.hp.usage.transport.tcp.TCPTransport
HostName=0.0.0.0
PortNumber=${CONNECTORS_RATINGSERVER_TRANSPORT_PORTNUMBER}
RecvBufferSize=512000
SendBufferSize=512000
TCPNoDelay=false


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/License]


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/ManagementService]

ClassName=com.hp.usage.management.ManagementService


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/Repository]

ClassName=com.hp.usage.jcr.repository.RepositoryContentLoader
ContentPath=datamodel
_ContentPath=deployment/scripting/SSO


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RTP]

ClassName=com.hp.usage.rtp.RTPServer
PackageFilter=oracle.jdbc
PackageFilter=oracle.jdbc.driver
PackageFilter=org.jacorb.*


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RTP/Configuration]


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RTP/Configuration/AssetStoreDS]

ClassName=com.hp.usage.rtp.DataSource
dataSource.driverClass=${ASSETSTORE_DATABASECLASS}
dataSource.jdbcUrl=${ASSETSTORE_DATABASEURL}
dataSource.password=${ASSETSTORE_DATABASEPASSWORD}
dataSource.username=${ASSETSTORE_DATABASEUSER}
jndiName=assetStoreDS
service.factoryPid=com.hp.atom.datasource


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RTP/Configuration/IUMRuleChain]

ClassName=com.hp.usage.rtp.RTPRuleChainService
ruleChainName=000.AuthnReq
ruleChainName=000.CheckAuthnReq
ruleChainName=000.CheckLogoutReq
ruleChainName=010.NotificationsProcess
service.factoryPid=com.hp.atom.ium.rulechain.instance


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RTP/Configuration/KernelConfig]

ClassName=com.hp.usage.rtp.KernelConfig
clusterName=CableLabsCluster
groupName=CableLabsGroup
hibernateDialect=org.hibernate.dialect.Oracle10gDialect
persistentId=com.hp.atom.config.kernel
runLevel=-1


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RTP/Plan]

Artifacts=plan:com.hp.atom.platform.core


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains]

ClassName=RuleChainManager
MaxPoolSize=${RULECHAINMANAGER_MAXPOOLSIZE}
MinPoolSize=${RULECHAINMANAGER_MINPOOLSIZE}
RuleChainNames=000.AuthnReq
RuleChainNames=000.CheckAuthnReq
RuleChainNames=000.CheckLogoutReq
RuleChainNames=010.NotificationsProcess


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq]

ClassName=RuleChain
RuleNames=010.LogBegin
RuleNames=020.SetParams
RuleNames=030.CheckCredentials
RuleNames=040.GenerateAssertions
RuleNames=050.SignAssertions
RuleNames=060.CheckNotifications
RuleNames=070.LogEnd


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/010.LogBegin]

ClassName=LogNMERule
Level=INFO
Message=::::: Log Rule Chain AuthnReq :::::


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/020.SetParams]

AdornOps=set AMX_SAML_ResponseActionString 0
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials]

ClassName=RuleChain
RuleNames=010.GetInfo
RuleNames=020.EncrypttypeToLowerCase
RuleNames=030.CheckUser


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/010.GetInfo]

ClassName=com.hp.usage.nme.rules.NMEConversionRule
CreateMissingAttributeInSNME=false
CreateSNMEIfNeeded=true
SNMEType=SAML20_CORP:Body
StructuredNMEToNMEMap=requestRuleEngine.request.userCrendential.password.CData,PasswordString,-1
StructuredNMEToNMEMap=requestRuleEngine.request.userCrendential.loginname[0].CData,LoginNameString,-1
StructuredNMEToNMEMap=requestRuleEngine.request.user.updatesource.CData,updateSourceString,-1
StructuredNMEToNMEMap=requestRuleEngine.request.user.locale.CData,localeString,-1
StructuredNMEToNMEMap=requestRuleEngine.request.user.encrypttype.CData,encrypttypeString,DES
StructuredNMEToNMEMap=requestRuleEngine.request.sessionResponse.sessionInfo.sessionid,assertionID,-1
StructuredNMEToNMEMap=requestRuleEngine.request.sessionResponse.sessionInfo.requestauthnid,authnRequestID,-1


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/020.EncrypttypeToLowerCase]

AdornOps=lower encrypttypeString encrypttypeStringLower
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser]

ClassName=ConditionalRule
Conditions=PasswordString,!=,-1
TrueRuleChain=010.ValidateUser


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser]

ClassName=ConditionalRule
Conditions=localeString,contains,"EC"
FalseRuleChain=Encript
TrueRuleChain=NotEncript


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript]

ClassName=ConditionalRule
Conditions=encrypttypeStringLower,=,aes256
FalseRuleChain=EncryptDES
TrueRuleChain=EncryptAES256


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptAES256]

ClassName=RuleChain
RuleNames=001.GeneratedKeys
RuleNames=002.ValidatetoCutKey
RuleNames=003.ConvertIntoBytes
RuleNames=004.CipherIntoAES
RuleNames=005.SetToSNME
RuleNames=000.Log


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptAES256/000.Log]

Attributes=PasswordString
Attributes=keyBinary
Attributes=StringValueToBin
Attributes=EncodeBinary
Attributes=AMX_AM_PWD_String_tmp
ClassName=LogNMERule
LogLevel=DEBUG
Message=!!-- Finish the AES Flow --!!


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptAES256/001.GeneratedKeys]

AdornOps=set keyPKString fn17enl4d3Z1dHNycXBvbm1sa2ppaGdmZWRjYmFgX15dW1pZWFdWVVRTUlFQT05NTEtKSUhHRkVEQ0JBQD89Ozo5ODc2NTQzMjEwLy4tLCsqKSgnJiUjIiEg
AdornOps=decBase64 keyPKString keyBinary
AdornOps=bin2str keyBinary keyString "UTF-8"
AdornOps=length keyString keyLengthInteger
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptAES256/002.ValidatetoCutKey]

ClassName=ConditionalRule
Conditions=keyLengthInteger,>,32
TrueRuleChain=1.cutKey


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptAES256/002.ValidatetoCutKey/1.cutKey]

AdornOps=substr 0 32 keyString keyString
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptAES256/003.ConvertIntoBytes]

AdornOps=str2bin keyString keyBinary "UTF-8"
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptAES256/004.CipherIntoAES]

AdornOps=str2bin PasswordString StringValueToBin "UTF-8"
AdornOps=encrypt "AES" keyBinary - StringValueToBin EncodeBinary
AdornOps=encBase64 EncodeBinary PasswordString
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptAES256/005.SetToSNME]

ClassName=com.hp.usage.nme.rules.NMEConversionRule
CreateMissingAttributeInSNME=false
CreateSNMEIfNeeded=true
NMEToStructuredNMEMap=PasswordString,requestRuleEngine.request.userCrendential.password.CData
SNMEType=SAML20_CORP:Body


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptDES]

ClassName=ConditionalRule
Conditions=encrypttypeStringLower,=,des
TrueRuleChain=EncryptDES


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptDES/EncryptDES]

ClassName=RuleChain
RuleNames=001.GeneratedKeys
RuleNames=002.ValidatetoCutKey
RuleNames=003.ConvertIntoBytes
RuleNames=004.CipherIntoDES
RuleNames=005.SetToSNME
RuleNames=000.Log


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptDES/EncryptDES/000.Log]

ClassName=LogNMERule
LogLevel=DEBUG
Message=!!-- Finish the DES Flow --!!


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptDES/EncryptDES/001.GeneratedKeys]

AdornOps=set keyPKString ICEiIyUmJygpKissLS4vMDEyMzQ1Njc4OTo7PT9AQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpbXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e31+
AdornOps=decBase64 keyPKString keyBinary
AdornOps=bin2str keyBinary keyString "UTF-8"
AdornOps=length keyString keyLengthInteger
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptDES/EncryptDES/002.ValidatetoCutKey]

ClassName=ConditionalRule
Conditions=keyLengthInteger,>,8
TrueRuleChain=1.cutKey


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptDES/EncryptDES/002.ValidatetoCutKey/1.cutKey]

AdornOps=substr 0 8 keyString keyString
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptDES/EncryptDES/003.ConvertIntoBytes]

AdornOps=str2bin keyString keyBinary "UTF-8"
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptDES/EncryptDES/004.CipherIntoDES]

AdornOps=str2bin PasswordString StringValueToBin "UTF-8"
AdornOps=encrypt "DES" keyBinary - StringValueToBin EncodeBinary
AdornOps=encBase64 EncodeBinary PasswordString
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/Encript/EncryptDES/EncryptDES/005.SetToSNME]

ClassName=com.hp.usage.nme.rules.NMEConversionRule
CreateMissingAttributeInSNME=false
CreateSNMEIfNeeded=true
NMEToStructuredNMEMap=PasswordString,requestRuleEngine.request.userCrendential.password.CData
SNMEType=SAML20_CORP:Body


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/NotEncript]

ClassName=RuleChain
RuleNames=000.Log
RuleNames=010.ValidateEMAIL


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/NotEncript/000.Log]

ClassName=LogNMERule
Level=INFO
Message=-- NotEncript the username belong to Ecuador --


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/NotEncript/010.ValidateEMAIL]

ClassName=com.hp.siu.collector.rules.PerlRegExStringRule
MatchMode=match
Operation=match
RegExPattern=[A-Za-z0-9_+]([A-Za-z0-9_+.]*[A-Za-z0-9_+])?@[a-z0-9.\-\_]+
SourceAttribute=LoginNameString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/NotEncript/010.ValidateEMAIL/FalseRule]

ClassName=RuleChain
RuleNames=000.LOG


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/NotEncript/010.ValidateEMAIL/FalseRule/000.LOG]

ClassName=LogNMERule
LogLevel=DEBUG
Message=-- Error in the format is not a valid username --
NullAlso=true


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/NotEncript/010.ValidateEMAIL/FalseRule/005.SetGlobalMessage]

ClassName=com.hp.usage.nme.rules.NMEConversionRule
CreateMissingAttributeInSNME=false
CreateSNMEIfNeeded=true
NMEToStructuredNMEMap=assertionID,responseRuleEngine.globalMessage.assertionID
SNMEType=SAML20_CORP:Body


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/NotEncript/010.ValidateEMAIL/FalseRule/010.SetError]

AdornOps=set responseRuleEngine.responseCode -207
AdornOps=set responseRuleEngine.responseMessage "urn:oasis:names:tc:SAML:2.0:status:AuthnFailedByUser"
AdornOps=set responseRuleEngine.globalMessage.authnResponseMessage <WebLogin><Result>2</Result><Description>Format error in user agent credentials, try again</Description></WebLogin>
ClassName=SNMEAdornmentRule
SNMEType=SAML20_CORP:Body


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/NotEncript/010.ValidateEMAIL/TrueRule]

ClassName=RuleChain
RuleNames=000.Log


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/030.CheckCredentials/030.CheckUser/010.ValidateUser/NotEncript/010.ValidateEMAIL/TrueRule/000.Log]

ClassName=LogNMERule
LogLevel=DEBUG
Message=--Valid Email and it is from Ecuador the flow continues --
NullAlso=true


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/040.GenerateAssertions]

actionName=CBL.AuthRequestAlternative
ClassName=com.hp.usage.rtp.InvokeActionRule
output=AMX_SAML_ResponseActionString
parameter=nme=@NME
parameter=AMX_SAML_ResponseActionString=AMX_SAML_ResponseActionString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/050.SignAssertions]

ClassName=RuleChain
RuleNames=010.GetInfo
RuleNames=020.SignMessage


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/050.SignAssertions/010.GetInfo]

ClassName=NMEConversionRule
CreateSNMEIfNeeded=true
SNMEType=SAML20_CORP:Body
StructuredNMEToNMEMap=responseRuleEngine.responseCode,AMX_SAML_ResultCodeInteger
StructuredNMEToNMEMap=responseRuleEngine.globalMessage.authnResponseMessage,AMX_SAML_SAMLMessageString
StructuredNMEToNMEMap=requestRuleEngine.request.sessionResponse.sessionInfo.authnRequest.ProtocolBinding,AMX_SAML_SAMLBindingString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/050.SignAssertions/020.SignMessage]

ClassName=ConditionalRule
Conditions=AMX_SAML_ResultCodeInteger,=,0
Conditions=AMX_SAML_SAMLBindingString,contains,"HTTP-POST"
Operations=and
TrueRuleChain=010.Sign
TrueRuleChain=020.EncodeSAMLMessage


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/050.SignAssertions/020.SignMessage/010.Sign]

alias=telcelsso
ClassName=com.hpe.mx.custom.rules.CrytoSAMLMessage
keyPass=${CONNECTOR_KEYSTOREPASSWORD}
keyStoreFile=${CONNECTOR_KEYSTOREFILE}
storePass=${CONNECTOR_KEYSTOREPASSWORD}
xmlPlain=AMX_SAML_SAMLMessageString
xmlSign=AMX_SAML_SAMLMessageSignString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/050.SignAssertions/020.SignMessage/020.EncodeSAMLMessage]

ClassName=com.hp.usage.nme.rules.NMEConversionRule
CreateMissingAttributeInSNME=false
CreateSNMEIfNeeded=true
NMEToStructuredNMEMap=AMX_SAML_SAMLMessageSignString,responseRuleEngine.globalMessage.authnResponseMessage
SNMEType=SAML20_CORP:Body


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/060.CheckNotifications]

ClassName=ConditionalRule
Conditions=AMX_SAML_ResponseActionString,contains,","
Conditions=AMX_SAML_ResponseActionString,!=,"0"
Operations=or
TrueRuleChain=010.SendNotifications


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/060.CheckNotifications/010.SendNotifications]

ClassName=LocalRuleChainInvoker
RuleChain=010.NotificationsProcess


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.AuthnReq/070.LogEnd]

ClassName=LogNMERule
Level=INFO
Message=::::: Log End Rule Chain AuthnReq :::::


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq]

ClassName=RuleChain
RuleNames=010.LogBegin
RuleNames=020.SetParams
RuleNames=030.CheckSAMLRequestAction
RuleNames=040.SignAssertions
RuleNames=050.CheckNotifications
RuleNames=060.LogEnd


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq/010.LogBegin]

ClassName=LogNMERule
Level=INFO
Message=::::: Log Rule Chain CheckAuthnReq :::::


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq/020.SetParams]

AdornOps=set AMX_SAML_ResponseActionString 0
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq/030.CheckSAMLRequestAction]

actionName=CBL.CheckAuthRequestAlternative
ClassName=com.hp.usage.rtp.InvokeActionRule
output=AMX_SAML_ResponseActionString
parameter=nme=@NME
parameter=AMX_SAML_ResponseActionString=AMX_SAML_ResponseActionString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq/040.SignAssertions]

ClassName=RuleChain
RuleNames=010.GetInfo
RuleNames=020.SignMessage


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq/040.SignAssertions/010.GetInfo]

ClassName=NMEConversionRule
CreateSNMEIfNeeded=true
SNMEType=SAML20_CORP:Body
StructuredNMEToNMEMap=responseRuleEngine.responseCode,AMX_SAML_ResultCodeInteger
StructuredNMEToNMEMap=responseRuleEngine.globalMessage.authnResponseMessage,AMX_SAML_SAMLMessageString
StructuredNMEToNMEMap=requestRuleEngine.request.authnRequest.ProtocolBinding,AMX_SAML_SAMLBindingString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq/040.SignAssertions/020.SignMessage]

ClassName=ConditionalRule
Conditions=AMX_SAML_ResultCodeInteger,within,[0,2]
Conditions=AMX_SAML_SAMLBindingString,contains,"HTTP-POST"
Operations=and
TrueRuleChain=010.Sign
TrueRuleChain=020.EncodeSAMLMessage


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq/040.SignAssertions/020.SignMessage/010.Sign]

alias=telcelsso
ClassName=com.hpe.mx.custom.rules.CrytoSAMLMessage
keyPass=${CONNECTOR_KEYSTOREPASSWORD}
keyStoreFile=${CONNECTOR_KEYSTOREFILE}
storePass=${CONNECTOR_KEYSTOREPASSWORD}
xmlPlain=AMX_SAML_SAMLMessageString
xmlSign=AMX_SAML_SAMLMessageSignString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq/040.SignAssertions/020.SignMessage/020.EncodeSAMLMessage]

ClassName=com.hp.usage.nme.rules.NMEConversionRule
CreateMissingAttributeInSNME=false
CreateSNMEIfNeeded=true
NMEToStructuredNMEMap=AMX_SAML_SAMLMessageSignString,responseRuleEngine.globalMessage.authnResponseMessage
SNMEType=SAML20_CORP:Body


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq/050.CheckNotifications]

ClassName=ConditionalRule
Conditions=AMX_SAML_ResponseActionString,contains,","
Conditions=AMX_SAML_ResponseActionString,!=,"0"
Operations=or
TrueRuleChain=010.SendNotifications


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq/050.CheckNotifications/010.SendNotifications]

ClassName=LocalRuleChainInvoker
RuleChain=010.NotificationsProcess


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckAuthnReq/060.LogEnd]

ClassName=LogNMERule
Level=INFO
Message=::::: Log End Rule Chain CheckAuthnReq :::::


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckLogoutReq]

ClassName=RuleChain
RuleNames=010.LogBegin
RuleNames=020.SetParams
RuleNames=030.CheckSAMLRequestAction
RuleNames=040.SignAssertions
RuleNames=050.LogEnd


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckLogoutReq/010.LogBegin]

ClassName=LogNMERule
Level=INFO
Message=::::: Log Rule Chain CheckLogoutReq :::::


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckLogoutReq/020.SetParams]

AdornOps=set AMX_SAML_ResponseActionString 0
ClassName=AdornmentRule


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckLogoutReq/030.CheckSAMLRequestAction]

actionName=CBL.CheckLogoutRequest
ClassName=com.hp.usage.rtp.InvokeActionRule
output=AMX_SAML_ResponseActionString
parameter=nme=@NME
parameter=AMX_SAML_ResponseActionString=AMX_SAML_ResponseActionString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckLogoutReq/040.SignAssertions]

ClassName=RuleChain
RuleNames=010.GetInfo
RuleNames=020.SignMessage


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckLogoutReq/040.SignAssertions/010.GetInfo]

ClassName=NMEConversionRule
CreateSNMEIfNeeded=true
SNMEType=SAML20_CORP:Body
StructuredNMEToNMEMap=responseRuleEngine.responseCode,AMX_SAML_ResultCodeInteger
StructuredNMEToNMEMap=responseRuleEngine.globalMessage.logoutResponseMessage,AMX_SAML_SAMLMessageString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckLogoutReq/040.SignAssertions/020.SignMessage]

ClassName=ConditionalRule
Conditions=AMX_SAML_ResultCodeInteger,within,[0]
TrueRuleChain=010.Sign
TrueRuleChain=020.EncodeSAMLMessage


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckLogoutReq/040.SignAssertions/020.SignMessage/010.Sign]

alias=telcelsso
ClassName=com.hpe.mx.custom.rules.CrytoSAMLMessage
keyPass=${CONNECTOR_KEYSTOREPASSWORD}
keyStoreFile=${CONNECTOR_KEYSTOREFILE}
storePass=${CONNECTOR_KEYSTOREPASSWORD}
xmlPlain=AMX_SAML_SAMLMessageString
xmlSign=AMX_SAML_SAMLMessageSignString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckLogoutReq/040.SignAssertions/020.SignMessage/020.EncodeSAMLMessage]

ClassName=com.hp.usage.nme.rules.NMEConversionRule
CreateMissingAttributeInSNME=false
CreateSNMEIfNeeded=true
NMEToStructuredNMEMap=AMX_SAML_SAMLMessageSignString,responseRuleEngine.globalMessage.logoutResponseMessage
SNMEType=SAML20_CORP:Body


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/000.CheckLogoutReq/050.LogEnd]

ClassName=LogNMERule
Level=INFO
Message=::::: Log End Rule Chain CheckLogoutReq :::::


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/010.NotificationsProcess]

ClassName=RuleChain
RuleNames=010.LogIncoming
RuleNames=020.ConvertStringToList
RuleNames=020.UserToNewSNME
RuleNames=030.MakeActionsSNME


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/010.NotificationsProcess/010.LogIncoming]

ClassName=LogNMERule
Level=INFO
Message= ::::: Notifications Incoming :::::


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/010.NotificationsProcess/020.ConvertStringToList]

ClassName=AddToListAttributeRule
Delimiters=,
InputAttribute=AMX_SAML_ResponseActionString
ListAttribute=AMX_SAML_NotificationList


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/010.NotificationsProcess/020.UserToNewSNME]

AdornOps=copy requestRuleEngine.request.user responseRuleEngine.user
ClassName=SNMEAdornmentRule
SNMEType=SAML20_CORP:Body


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/010.NotificationsProcess/030.MakeActionsSNME]

ClassName=ListAttributeIterator
ListAttributeName=AMX_SAML_NotificationList
RuleChain=010.MakeIt
TmpAttributeName=AMX_SAML_ResponseActionString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/RuleChains/010.NotificationsProcess/030.MakeActionsSNME/010.MakeIt]

actionName=CBL.MakeNotifications.Corp
ClassName=com.hp.usage.rtp.InvokeActionRule
output=AMX_SAML_ResponseActionString
parameter=nme=@NME
parameter=AMX_SAML_ResponseActionString=AMX_SAML_ResponseActionString


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/snmeloader]

ClassName=com.hp.usage.nme.schemaloader.NMESchemaLoader
Schema=mySNMESchema
SchemaPath=datamodel


#END#
[/templates/CORPORATIVOS/AUTH/RE_AUTH_TEMPLATE/snmeloader/mySNMESchema]

Link=/SNMESchema
